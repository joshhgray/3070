________________________________
Week 12: Bio Data collection and pre-processing
________________________________

Data Presprocessing
    - [x] Define new preprocessing pipeline (given switch to graph-
          based mols)
    - [x] Elementary data cleaning to remove non-essential data (e.g., 
          submission date, keywords, etc.)
    - [x] Download Sample data
    - [ ] Download Sample runs
    - [ ] use MGnify API to extract relevant biolgoical data
    - [ ] combine data together so it can be fed to graph building
          software
Build Population Pool
    - [x] Choose a graph building software (e.g, networkX )
    - [ ] Design plan for graph
    - [ ] Write graph-building software
Population Building Integration
    - [ ] Build random sampling function to extract a random set of 
          'mols' from the population pool to run the GA
    - [ ] Test integration with GA


_____________________________________________________________________
Daily Log:

Monday   | Defined new pre-processing plan
Tuesday  | - - - - - - - - - - - - - - - - - - - - - - - - - - -
Wednesday| Manual Biological Preprocessing (BGC extraction)
Thursday | More manual bio pre-processing, started working on graph 
         : building functionality
Friday   | format test population into json for easy conversion to 
         : graph-based representation
Saturday | More data collection and pre-processing
Sunday   | More data collection and pre-processing
______________________________________________________________________
Reflection:
- Achieved: 
- Challenges: getting external resources to work correctly, using a novel 
              population building mechanic
- Next Week: hopefully finish collecting necessary data to build an intial 
             population and then build that initial population. So I can 
             get moving core functionalities.

_____________________________________________________________________
BACKLOG:

Write debug msgs for each test in:
    - [ ] test_controller_integration.py
    - [ ] test_dash_app.py
    - [ ] test_ga_integration.py
Write thorough documentation
    - [/] Structure
    - [ ] How to use system
    - [ ] How to interpret logs
Modularize GA
    - [ ] Modularize each genetic operation
____________